{
  "version": 3,
  "sources": ["../../../../../node_modules/angular-tabler-icons/fesm2020/angular-tabler-icons.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { ElementRef, ChangeDetectorRef, Component, Inject, Input, NgModule, Optional } from '@angular/core';\nconst _c0 = [\"*\"];\nclass OptionsProvider {\n  constructor(options) {\n    this.options = options;\n  }\n}\nfunction uppercamelcase(str) {\n  return str.toLowerCase().replace(/(?:^\\w|[A-Z]|\\b\\w)/g, firstLetter => {\n    return firstLetter.toUpperCase();\n  }).replace(/[-_]/g, '');\n}\nclass TablerIconComponent {\n  constructor(elem, changeDetector, options) {\n    this.elem = elem;\n    this.changeDetector = changeDetector;\n    this.options = options;\n  }\n  ngOnChanges(changes) {\n    // icons are provided as an array of objects because of \"multi: true\"\n    const icons = Object.assign({}, ...this.options.map(option => option.icons));\n    const svg = icons[`Icon${uppercamelcase(changes.name.currentValue)}`] ?? '';\n    if (!svg && !this.options.some(option => option.ignoreWarnings)) {\n      console.warn(`Tabler Icon not found: ${changes.name.currentValue}\\n` + `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`);\n    }\n    this.elem.nativeElement.innerHTML = svg;\n    this.changeDetector.markForCheck();\n  }\n}\nTablerIconComponent.ɵfac = function TablerIconComponent_Factory(t) {\n  return new (t || TablerIconComponent)(i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(OptionsProvider));\n};\nTablerIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TablerIconComponent,\n  selectors: [[\"i-tabler\"], [\"tabler-icon\"]],\n  inputs: {\n    name: \"name\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function TablerIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TablerIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'i-tabler, tabler-icon',\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [OptionsProvider]\n      }]\n    }];\n  }, {\n    name: [{\n      type: Input\n    }]\n  });\n})();\nclass TablerIconsModule {\n  constructor(options) {\n    this.options = options;\n    if (!this.options) {\n      throw new Error(`No icon provided. Make sure to use 'TablerIconsModule.pick({ ... })' when importing the module\\n` + `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`);\n    }\n  }\n  /**\n   * Initialize module with given icons and options\n   * @param icons\n   * @returns Module with options\n   */\n  static pick(icons, options) {\n    return {\n      ngModule: TablerIconsModule,\n      providers: [{\n        provide: OptionsProvider,\n        useValue: {\n          icons,\n          ...options\n        },\n        multi: true\n      }]\n    };\n  }\n}\nTablerIconsModule.ɵfac = function TablerIconsModule_Factory(t) {\n  return new (t || TablerIconsModule)(i0.ɵɵinject(OptionsProvider, 8));\n};\nTablerIconsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TablerIconsModule,\n  declarations: [TablerIconComponent],\n  exports: [TablerIconComponent]\n});\nTablerIconsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TablerIconsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [TablerIconComponent],\n      exports: [TablerIconComponent]\n    }]\n  }], function () {\n    return [{\n      type: OptionsProvider,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nclass TablerIconsProvider {\n  static pick(icons, options) {\n    return {\n      provide: OptionsProvider,\n      useValue: {\n        icons,\n        ...options\n      },\n      multi: true\n    };\n  }\n}\n\n/*\n * Public API Surface of angular-tabler-icons\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TablerIconComponent, TablerIconsModule, TablerIconsProvider };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,MAAM,CAAC,GAAG;AAChB,IAAM,kBAAN,MAAsB;AAAA,EACpB,YAAY,SAAS;AACnB,SAAK,UAAU;AAAA,EACjB;AACF;AACA,SAAS,eAAe,KAAK;AAC3B,SAAO,IAAI,YAAY,EAAE,QAAQ,uBAAuB,iBAAe;AACrE,WAAO,YAAY,YAAY;AAAA,EACjC,CAAC,EAAE,QAAQ,SAAS,EAAE;AACxB;AACA,IAAM,sBAAN,MAA0B;AAAA,EACxB,YAAY,MAAM,gBAAgB,SAAS;AACzC,SAAK,OAAO;AACZ,SAAK,iBAAiB;AACtB,SAAK,UAAU;AAAA,EACjB;AAAA,EACA,YAAY,SAAS;AAEnB,UAAM,QAAQ,OAAO,OAAO,CAAC,GAAG,GAAG,KAAK,QAAQ,IAAI,YAAU,OAAO,KAAK,CAAC;AAC3E,UAAM,MAAM,MAAM,OAAO,eAAe,QAAQ,KAAK,YAAY,CAAC,EAAE,KAAK;AACzE,QAAI,CAAC,OAAO,CAAC,KAAK,QAAQ,KAAK,YAAU,OAAO,cAAc,GAAG;AAC/D,cAAQ,KAAK,0BAA0B,QAAQ,KAAK,YAAY;AAAA,4EAAoF;AAAA,IACtJ;AACA,SAAK,KAAK,cAAc,YAAY;AACpC,SAAK,eAAe,aAAa;AAAA,EACnC;AACF;AACA,oBAAoB,OAAO,SAAS,4BAA4B,GAAG;AACjE,SAAO,KAAK,KAAK,qBAAwB,kBAAkB,UAAU,GAAM,kBAAkB,iBAAiB,GAAM,kBAAkB,eAAe,CAAC;AACxJ;AACA,oBAAoB,OAAyB,kBAAkB;AAAA,EAC7D,MAAM;AAAA,EACN,WAAW,CAAC,CAAC,UAAU,GAAG,CAAC,aAAa,CAAC;AAAA,EACzC,QAAQ;AAAA,IACN,MAAM;AAAA,EACR;AAAA,EACA,UAAU,CAAI,oBAAoB;AAAA,EAClC,oBAAoB;AAAA,EACpB,OAAO;AAAA,EACP,MAAM;AAAA,EACN,UAAU,SAAS,6BAA6B,IAAI,KAAK;AACvD,QAAI,KAAK,GAAG;AACV,MAAG,gBAAgB;AACnB,MAAG,aAAa,CAAC;AAAA,IACnB;AAAA,EACF;AAAA,EACA,QAAQ,CAAC,yJAAyJ;AACpK,CAAC;AAAA,CACA,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,qBAAqB,CAAC;AAAA,IAC5F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,UAAU;AAAA,MACV,QAAQ,CAAC,gJAAgJ;AAAA,IAC3J,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAS;AAAA,MACT,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,QACN,MAAM,CAAC,UAAU;AAAA,MACnB,CAAC;AAAA,IACH,GAAG;AAAA,MACD,MAAS;AAAA,MACT,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,QACN,MAAM,CAAC,iBAAiB;AAAA,MAC1B,CAAC;AAAA,IACH,GAAG;AAAA,MACD,MAAM;AAAA,MACN,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,QACN,MAAM,CAAC,eAAe;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAAG;AAAA,IACD,MAAM,CAAC;AAAA,MACL,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,oBAAN,MAAM,mBAAkB;AAAA,EACtB,YAAY,SAAS;AACnB,SAAK,UAAU;AACf,QAAI,CAAC,KAAK,SAAS;AACjB,YAAM,IAAI,MAAM;AAAA,4EAAkL;AAAA,IACpM;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO,KAAK,OAAO,SAAS;AAC1B,WAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,SAAS;AAAA,QACT,UAAU;AAAA,UACR;AAAA,WACG;AAAA,QAEL,OAAO;AAAA,MACT,CAAC;AAAA,IACH;AAAA,EACF;AACF;AACA,kBAAkB,OAAO,SAAS,0BAA0B,GAAG;AAC7D,SAAO,KAAK,KAAK,mBAAsB,SAAS,iBAAiB,CAAC,CAAC;AACrE;AACA,kBAAkB,OAAyB,iBAAiB;AAAA,EAC1D,MAAM;AAAA,EACN,cAAc,CAAC,mBAAmB;AAAA,EAClC,SAAS,CAAC,mBAAmB;AAC/B,CAAC;AACD,kBAAkB,OAAyB,iBAAiB,CAAC,CAAC;AAAA,CAC7D,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,cAAc,CAAC,mBAAmB;AAAA,MAClC,SAAS,CAAC,mBAAmB;AAAA,IAC/B,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAM;AAAA,MACN,YAAY,CAAC;AAAA,QACX,MAAM;AAAA,MACR,CAAC;AAAA,IACH,CAAC;AAAA,EACH,GAAG,IAAI;AACT,GAAG;AACH,IAAM,sBAAN,MAA0B;AAAA,EACxB,OAAO,KAAK,OAAO,SAAS;AAC1B,WAAO;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,QACR;AAAA,SACG;AAAA,MAEL,OAAO;AAAA,IACT;AAAA,EACF;AACF;",
  "names": []
}
