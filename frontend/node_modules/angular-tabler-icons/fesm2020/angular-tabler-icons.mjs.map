{"version":3,"file":"angular-tabler-icons.mjs","sources":["../../../projects/angular-tabler-icons/src/lib/options.provider.ts","../../../projects/angular-tabler-icons/src/lib/utils.ts","../../../projects/angular-tabler-icons/src/lib/tabler-icon.component.ts","../../../projects/angular-tabler-icons/src/lib/tabler-icon.component.html","../../../projects/angular-tabler-icons/src/lib/tabler-icons.module.ts","../../../projects/angular-tabler-icons/src/lib/tabler-icons.provider.ts","../../../projects/angular-tabler-icons/src/public-api.ts","../../../projects/angular-tabler-icons/src/angular-tabler-icons.ts"],"sourcesContent":["import { Options } from \"./options.interfaces\";\n\nexport class OptionsProvider {\n  constructor(private options: Options) {}\n}\n","\nexport function uppercamelcase (str: string) {\n  return str.toLowerCase().replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (firstLetter) => {\n    return firstLetter.toUpperCase();\n  }).replace(/[-_]/g, '');\n}\n","import { Component, ElementRef, Input, Inject, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\nimport { Options } from './options.interfaces';\nimport { OptionsProvider } from './options.provider';\nimport { uppercamelcase } from './utils';\n\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'i-tabler, tabler-icon',\n  templateUrl: './tabler-icon.component.html',\n  styleUrls: [ './tabler-icon.component.scss' ],\n})\nexport class TablerIconComponent implements OnChanges {\n  @Input() name!: string;\n\n  constructor(\n    @Inject(ElementRef) private elem: ElementRef,\n    @Inject(ChangeDetectorRef) private changeDetector: ChangeDetectorRef,\n    @Inject(OptionsProvider) private options: Options[]\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    // icons are provided as an array of objects because of \"multi: true\"\n    const icons = Object.assign({}, ...this.options.map(option => option.icons));\n    const svg = icons[`Icon${uppercamelcase(changes.name.currentValue)}`] ?? '';\n\n    if (!svg && !this.options.some(option => option.ignoreWarnings)) {\n      console.warn(\n        `Tabler Icon not found: ${changes.name.currentValue}\\n` +\n        `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`\n      );\n    }\n\n    this.elem.nativeElement.innerHTML = svg;\n    this.changeDetector.markForCheck();\n  }\n}\n","<ng-content></ng-content>\n","import { NgModule, ModuleWithProviders, Optional } from '@angular/core';\nimport { TablerIconComponent } from './tabler-icon.component';\nimport { OptionsProvider } from './options.provider';\nimport { OptionIcons, Options } from './options.interfaces';\n\n\n@NgModule({\n  declarations: [\n    TablerIconComponent\n  ],\n  exports: [\n    TablerIconComponent\n  ]\n})\nexport class TablerIconsModule {\n  constructor(\n    @Optional() private options: OptionsProvider\n  ) {\n    if ( !this.options ) {\n      throw new Error(\n        `No icon provided. Make sure to use 'TablerIconsModule.pick({ ... })' when importing the module\\n` +\n        `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`\n      );\n    }\n  }\n\n  /**\n   * Initialize module with given icons and options\n   * @param icons\n   * @returns Module with options\n   */\n  static pick(icons: OptionIcons, options?: Options): ModuleWithProviders<TablerIconsModule> {\n    return {\n      ngModule: TablerIconsModule,\n      providers: [\n        {\n          provide: OptionsProvider,\n          useValue: {\n            icons,\n            ...options\n          },\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Provider } from '@angular/core';\nimport { OptionIcons, Options } from './options.interfaces';\nimport { OptionsProvider } from './options.provider';\n\nexport class TablerIconsProvider {\n  public static pick(icons: OptionIcons, options?: Options): Provider {\n    return {\n      provide: OptionsProvider,\n      useValue: {\n        icons,\n        ...options\n      },\n      multi: true\n    };\n  }\n}\n","/*\n * Public API Surface of angular-tabler-icons\n */\n\nexport { TablerIconComponent } from './lib/tabler-icon.component';\nexport { TablerIconsModule } from './lib/tabler-icons.module';\nexport { TablerIconsProvider } from './lib/tabler-icons.provider';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.OptionsProvider"],"mappings":"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"}