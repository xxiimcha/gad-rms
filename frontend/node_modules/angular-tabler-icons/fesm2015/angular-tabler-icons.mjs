import * as i0 from '@angular/core';
import { ElementRef, ChangeDetectorRef, Component, Inject, Input, NgModule, Optional } from '@angular/core';

class OptionsProvider {
    constructor(options) {
        this.options = options;
    }
}

function uppercamelcase(str) {
    return str.toLowerCase().replace(/(?:^\w|[A-Z]|\b\w)/g, (firstLetter) => {
        return firstLetter.toUpperCase();
    }).replace(/[-_]/g, '');
}

class TablerIconComponent {
    constructor(elem, changeDetector, options) {
        this.elem = elem;
        this.changeDetector = changeDetector;
        this.options = options;
    }
    ngOnChanges(changes) {
        var _a;
        // icons are provided as an array of objects because of "multi: true"
        const icons = Object.assign({}, ...this.options.map(option => option.icons));
        const svg = (_a = icons[`Icon${uppercamelcase(changes.name.currentValue)}`]) !== null && _a !== void 0 ? _a : '';
        if (!svg && !this.options.some(option => option.ignoreWarnings)) {
            console.warn(`Tabler Icon not found: ${changes.name.currentValue}\n` +
                `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`);
        }
        this.elem.nativeElement.innerHTML = svg;
        this.changeDetector.markForCheck();
    }
}
TablerIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TablerIconComponent, deps: [{ token: ElementRef }, { token: ChangeDetectorRef }, { token: OptionsProvider }], target: i0.ɵɵFactoryTarget.Component });
TablerIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.3.0", type: TablerIconComponent, selector: "i-tabler, tabler-icon", inputs: { name: "name" }, usesOnChanges: true, ngImport: i0, template: "<ng-content></ng-content>\n", styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TablerIconComponent, decorators: [{
            type: Component,
            args: [{ selector: 'i-tabler, tabler-icon', template: "<ng-content></ng-content>\n", styles: [":host{display:inline-block;width:24px;height:24px;fill:none;stroke:currentColor;stroke-width:2px;stroke-linecap:round;stroke-linejoin:round}\n"] }]
        }], ctorParameters: function () {
        return [{ type: i0.ElementRef, decorators: [{
                        type: Inject,
                        args: [ElementRef]
                    }] }, { type: i0.ChangeDetectorRef, decorators: [{
                        type: Inject,
                        args: [ChangeDetectorRef]
                    }] }, { type: undefined, decorators: [{
                        type: Inject,
                        args: [OptionsProvider]
                    }] }];
    }, propDecorators: { name: [{
                type: Input
            }] } });

class TablerIconsModule {
    constructor(options) {
        this.options = options;
        if (!this.options) {
            throw new Error(`No icon provided. Make sure to use 'TablerIconsModule.pick({ ... })' when importing the module\n` +
                `Refer to documentation on https://github.com/pierreavn/angular-tabler-icons`);
        }
    }
    /**
     * Initialize module with given icons and options
     * @param icons
     * @returns Module with options
     */
    static pick(icons, options) {
        return {
            ngModule: TablerIconsModule,
            providers: [
                {
                    provide: OptionsProvider,
                    useValue: Object.assign({ icons }, options),
                    multi: true
                }
            ]
        };
    }
}
TablerIconsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TablerIconsModule, deps: [{ token: OptionsProvider, optional: true }], target: i0.ɵɵFactoryTarget.NgModule });
TablerIconsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.3.0", ngImport: i0, type: TablerIconsModule, declarations: [TablerIconComponent], exports: [TablerIconComponent] });
TablerIconsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TablerIconsModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.3.0", ngImport: i0, type: TablerIconsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        TablerIconComponent
                    ],
                    exports: [
                        TablerIconComponent
                    ]
                }]
        }], ctorParameters: function () {
        return [{ type: OptionsProvider, decorators: [{
                        type: Optional
                    }] }];
    } });

class TablerIconsProvider {
    static pick(icons, options) {
        return {
            provide: OptionsProvider,
            useValue: Object.assign({ icons }, options),
            multi: true
        };
    }
}

/*
 * Public API Surface of angular-tabler-icons
 */

/**
 * Generated bundle index. Do not edit.
 */

export { TablerIconComponent, TablerIconsModule, TablerIconsProvider };
//# sourceMappingURL=angular-tabler-icons.mjs.map
